From 00760b7a3c3b23baeaad7b21558e5621a832cf03 Mon Sep 17 00:00:00 2001
From: Leon Joe K <leon.koithara@gmail.com>
Date: Sat, 16 Sep 2023 22:33:01 +0530
Subject: [PATCH 1/6] Hold onto items which donot fit vehicle storage space

---
 src/activity_item_handling.cpp | 57 +++++++++++++++-------------------
 1 file changed, 25 insertions(+), 32 deletions(-)

diff --git a/src/activity_item_handling.cpp b/src/activity_item_handling.cpp
index c34de07845ce7..0575aff923ae1 100644
--- a/src/activity_item_handling.cpp
+++ b/src/activity_item_handling.cpp
@@ -213,10 +213,10 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
     c.invalidate_weight_carried_cache();
     vehicle_part &vp = vpr.part();
     vehicle &veh = vpr.vehicle();
-    const tripoint where = veh.global_part_pos3( vp );
     map &here = get_map();
-    int fallen_count = 0;
+    int items_did_not_fit_count = 0;
     int into_vehicle_count = 0;
+    const std::string part_name = vp.info().name();
 
     // can't use constant reference here because of the spill_contents()
     for( item it : items ) {
@@ -238,14 +238,16 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
                 it.mod_charges( -charges_added );
                 into_vehicle_count += charges_added;
             }
-            here.add_item_or_charges( where, it );
-            fallen_count += it.count();
+            items_did_not_fit_count += it.count();
+            add_msg( _( "Unable to fit %s in the %2$s's %3$s" ), it.tname(), veh.name, part_name );
+            // if cannot retain in inventory due to being too large/heavy drop onto ground via the drop_on_map after returning
+            if( c.can_pickVolume( it ) && c.can_pickWeight( it, !get_option<bool>( "DANGEROUS_PICKUPS" ) ) ) {
+                c.i_add( it );
+            }
         }
         it.handle_pickup_ownership( c );
     }
 
-    const std::string part_name = vp.info().name();
-
     if( same_type( items ) ) {
         const item &it = items.front();
         const int dropcount = items.size() * it.count();
@@ -253,13 +255,23 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
 
         switch( reason ) {
             case item_drop_reason::deliberate:
-                c.add_msg_player_or_npc(
-                    n_gettext( "You put your %1$s in the %2$s's %3$s.",
-                               "You put your %1$s in the %2$s's %3$s.", dropcount ),
-                    n_gettext( "<npcname> puts their %1$s in the %2$s's %3$s.",
-                               "<npcname> puts their %1$s in the %2$s's %3$s.", dropcount ),
-                    it_name, veh.name, part_name
-                );
+                if ( items_did_not_fit_count == 0 ) {
+                    c.add_msg_player_or_npc(
+                        n_gettext( "You put your %1$s in the %2$s's %3$s.",
+                                   "You put your %1$s in the %2$s's %3$s.", dropcount ),
+                        n_gettext( "<npcname> puts their %1$s in the %2$s's %3$s.",
+                                   "<npcname> puts their %1$s in the %2$s's %3$s.", dropcount ),
+                        it_name, veh.name, part_name
+                    );
+                } else if( into_vehicle_count > 0 ){
+                    c.add_msg_player_or_npc(
+                        n_gettext( "You put some of your %1$s in the %2$s's %3$s.",
+                                   "You put some of your %1$s in the %2$s's %3$s.", dropcount ),
+                        n_gettext( "<npcname> puts some of their %1$s in the %2$s's %3$s.",
+                                   "<npcname> puts some of their %1$s in the %2$s's %3$s.", dropcount ),
+                        it_name, veh.name, part_name
+                    );
+                }
                 break;
             case item_drop_reason::too_large:
                 c.add_msg_if_player(
@@ -305,25 +317,6 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
                 break;
         }
     }
-
-    if( fallen_count > 0 ) {
-        const std::string ter_name = here.name( where );
-        if( into_vehicle_count > 0 ) {
-            c.add_msg_if_player(
-                m_warning,
-                n_gettext( "The %s is full, so something fell to the %s.",
-                           "The %s is full, so some items fell to the %s.", fallen_count ),
-                part_name, ter_name
-            );
-        } else {
-            c.add_msg_if_player(
-                m_warning,
-                n_gettext( "The %s is full, so it fell to the %s.",
-                           "The %s is full, so they fell to the %s.", fallen_count ),
-                part_name, ter_name
-            );
-        }
-    }
 }
 
 void drop_on_map( Character &you, item_drop_reason reason, const std::list<item> &items,

From a146d73e104bc4e9b0654f2faac7bcd430e6ea20 Mon Sep 17 00:00:00 2001
From: Leon Joe <36569141+Leonkoithara@users.noreply.github.com>
Date: Sun, 17 Sep 2023 00:18:39 +0530
Subject: [PATCH 2/6] Apply suggestions from code review

Co-authored-by: NetSysFire <59517351+NetSysFire@users.noreply.github.com>
Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
---
 src/activity_item_handling.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/activity_item_handling.cpp b/src/activity_item_handling.cpp
index 0575aff923ae1..ac7fc36a7bbec 100644
--- a/src/activity_item_handling.cpp
+++ b/src/activity_item_handling.cpp
@@ -239,7 +239,7 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
                 into_vehicle_count += charges_added;
             }
             items_did_not_fit_count += it.count();
-            add_msg( _( "Unable to fit %s in the %2$s's %3$s" ), it.tname(), veh.name, part_name );
+            add_msg( _( "Unable to fit %s in the %2$s's %3$s." ), it.tname(), veh.name, part_name );
             // if cannot retain in inventory due to being too large/heavy drop onto ground via the drop_on_map after returning
             if( c.can_pickVolume( it ) && c.can_pickWeight( it, !get_option<bool>( "DANGEROUS_PICKUPS" ) ) ) {
                 c.i_add( it );
@@ -255,7 +255,7 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
 
         switch( reason ) {
             case item_drop_reason::deliberate:
-                if ( items_did_not_fit_count == 0 ) {
+                if( items_did_not_fit_count == 0 ) {
                     c.add_msg_player_or_npc(
                         n_gettext( "You put your %1$s in the %2$s's %3$s.",
                                    "You put your %1$s in the %2$s's %3$s.", dropcount ),
@@ -263,7 +263,7 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
                                    "<npcname> puts their %1$s in the %2$s's %3$s.", dropcount ),
                         it_name, veh.name, part_name
                     );
-                } else if( into_vehicle_count > 0 ){
+                } else if( into_vehicle_count > 0 ) {
                     c.add_msg_player_or_npc(
                         n_gettext( "You put some of your %1$s in the %2$s's %3$s.",
                                    "You put some of your %1$s in the %2$s's %3$s.", dropcount ),

From d480e2ac057a0601ba25b7cd0a5e6f87689477fe Mon Sep 17 00:00:00 2001
From: Leon Joe K <leon.koithara@gmail.com>
Date: Sun, 17 Sep 2023 21:50:53 +0530
Subject: [PATCH 3/6] Drop onto ground if cannot retain in inventory

---
 src/activity_item_handling.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/activity_item_handling.cpp b/src/activity_item_handling.cpp
index ac7fc36a7bbec..02bcad2096a72 100644
--- a/src/activity_item_handling.cpp
+++ b/src/activity_item_handling.cpp
@@ -213,6 +213,7 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
     c.invalidate_weight_carried_cache();
     vehicle_part &vp = vpr.part();
     vehicle &veh = vpr.vehicle();
+    const tripoint where = veh.global_part_pos3( vp );
     map &here = get_map();
     int items_did_not_fit_count = 0;
     int into_vehicle_count = 0;
@@ -240,9 +241,13 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
             }
             items_did_not_fit_count += it.count();
             add_msg( _( "Unable to fit %s in the %2$s's %3$s." ), it.tname(), veh.name, part_name );
-            // if cannot retain in inventory due to being too large/heavy drop onto ground via the drop_on_map after returning
+            // Retain item in inventory if overflow not too large/heavy or wield if possible otherwise drop on the ground
             if( c.can_pickVolume( it ) && c.can_pickWeight( it, !get_option<bool>( "DANGEROUS_PICKUPS" ) ) ) {
                 c.i_add( it );
+            } else if ( c.has_wield_conflicts( it ) && c.can_wield( it ).success() ) {
+                c.wield( it );
+            } else {
+                here.add_item_or_charges( where, it );
             }
         }
         it.handle_pickup_ownership( c );

From a0772c1467f52701c5750a1f72edb0310c46f7bc Mon Sep 17 00:00:00 2001
From: Leon Joe K <leon.koithara@gmail.com>
Date: Sun, 17 Sep 2023 22:21:11 +0530
Subject: [PATCH 4/6] Drop onto ground if cannot retain in inventory

---
 src/activity_item_handling.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/activity_item_handling.cpp b/src/activity_item_handling.cpp
index 02bcad2096a72..592064ddf5519 100644
--- a/src/activity_item_handling.cpp
+++ b/src/activity_item_handling.cpp
@@ -244,7 +244,7 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
             // Retain item in inventory if overflow not too large/heavy or wield if possible otherwise drop on the ground
             if( c.can_pickVolume( it ) && c.can_pickWeight( it, !get_option<bool>( "DANGEROUS_PICKUPS" ) ) ) {
                 c.i_add( it );
-            } else if ( c.has_wield_conflicts( it ) && c.can_wield( it ).success() ) {
+            } else if ( !c.has_wield_conflicts( it ) && c.can_wield( it ).success() ) {
                 c.wield( it );
             } else {
                 here.add_item_or_charges( where, it );

From ebf5857fdf09db27269b86d277f7488d037d4913 Mon Sep 17 00:00:00 2001
From: Leon Joe K <leon.koithara@gmail.com>
Date: Sun, 17 Sep 2023 22:22:34 +0530
Subject: [PATCH 5/6] Drop onto ground if cannot retain in inventory

---
 src/activity_item_handling.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/activity_item_handling.cpp b/src/activity_item_handling.cpp
index 592064ddf5519..984cd77c6b757 100644
--- a/src/activity_item_handling.cpp
+++ b/src/activity_item_handling.cpp
@@ -244,7 +244,7 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
             // Retain item in inventory if overflow not too large/heavy or wield if possible otherwise drop on the ground
             if( c.can_pickVolume( it ) && c.can_pickWeight( it, !get_option<bool>( "DANGEROUS_PICKUPS" ) ) ) {
                 c.i_add( it );
-            } else if ( !c.has_wield_conflicts( it ) && c.can_wield( it ).success() ) {
+            } else if( !c.has_wield_conflicts( it ) && c.can_wield( it ).success() ) {
                 c.wield( it );
             } else {
                 here.add_item_or_charges( where, it );

From 13782dbf8fc30f07ab20c806156aa4a0fc2a8c68 Mon Sep 17 00:00:00 2001
From: Leon Joe K <leon.koithara@gmail.com>
Date: Mon, 18 Sep 2023 21:28:19 +0530
Subject: [PATCH 6/6] Hold onto items which donot fit vehicle storage space

---
 src/activity_item_handling.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/activity_item_handling.cpp b/src/activity_item_handling.cpp
index 984cd77c6b757..7d8f8fc412772 100644
--- a/src/activity_item_handling.cpp
+++ b/src/activity_item_handling.cpp
@@ -247,6 +247,8 @@ static void put_into_vehicle( Character &c, item_drop_reason reason, const std::
             } else if( !c.has_wield_conflicts( it ) && c.can_wield( it ).success() ) {
                 c.wield( it );
             } else {
+                const std::string ter_name = here.name( where );
+                add_msg( _( "The %s falls to the %s." ), it.tname(), ter_name );
                 here.add_item_or_charges( where, it );
             }
         }
